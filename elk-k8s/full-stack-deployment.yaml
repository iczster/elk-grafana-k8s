# -------------------- elk-stack.yaml --------------------
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: elk
---
# Elasticsearch
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
        ports:
          - containerPort: 9200
        env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.security.http.ssl.enabled
            value: "false"
          - name: xpack.security.transport.ssl.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
        volumeMounts:
          - name: es-data
            mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: es-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elk
spec:
  selector:
    app: elasticsearch
  type: NodePort
  ports:
    - port: 9200
      targetPort: 9200
      nodePort: 30200
---
# Logstash
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  namespace: elk
data:
  logstash.conf: |
    input {
      http {
        port => 5044
      }
    }

    filter {
      json { source => "message" }
    }

    output {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "metrics-%{+YYYY.MM.dd}"
      }
      stdout { codec => rubydebug }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.14.0
        ports:
          - containerPort: 5044
        volumeMounts:
          - name: logstash-pipeline
            mountPath: /usr/share/logstash/pipeline
      volumes:
        - name: logstash-pipeline
          configMap:
            name: logstash-pipeline
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elk
spec:
  type: ClusterIP
  selector:
    app: logstash
  ports:
    - port: 5044
      targetPort: 5044
---
# Kibana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.14.0
        ports:
          - containerPort: 5601
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://elasticsearch:9200"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elk
spec:
  selector:
    app: kibana
  type: NodePort
  ports:
    - port: 5601
      targetPort: 5601
      nodePort: 30002
---
# Grafana (with provisioning + dashboard)
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: elk
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Elasticsearch
        type: elasticsearch
        access: proxy
        url: http://elasticsearch:9200
        isDefault: true
        jsonData:
          timeField: "@timestamp"

  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: elk
data:
  metrics-dashboard.json: |
    {
      "id": null,
      "uid": "per-second-metrics",
      "title": "Per Second Metrics",
      "timezone": "browser",
      "schemaVersion": 36,
      "version": 1,
      "refresh": "1s",
      "panels": [
        {
          "type": "timeseries",
          "title": "Live Metrics per Second",
          "targets": [
            {
              "refId": "A",
              "datasource": {
                "type": "elasticsearch",
                "uid": "-100"
              },
              "timeField": "@timestamp",
              "metrics": [
                { "id": "1", "type": "avg", "field": "metric" }
              ],
              "bucketAggs": [
                {
                  "type": "date_histogram",
                  "id": "2",
                  "field": "@timestamp",
                  "settings": {
                    "interval": "1s",
                    "min_doc_count": 1
                  }
                }
              ]
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "none",
              "color": {
                "mode": "palette-classic"
              }
            },
            "overrides": []
          },
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "bottom"
            }
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 0
          }
        }
      ],
      "time": {
        "from": "now-5m",
        "to": "now"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
          - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin
        volumeMounts:
          - name: grafana-provisioning
            mountPath: /etc/grafana/provisioning
          - name: grafana-dashboards
            mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: elk
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30001
---
# Metrics generator (per-second)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-generator
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-generator
  template:
    metadata:
      labels:
        app: metrics-generator
    spec:
      containers:
      - name: metrics-generator
        image: busybox
        command:
          - /bin/sh
          - -c
          - |
            while true; do
              TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ");
              VALUE=$((RANDOM % 100));
              echo "{\"@timestamp\":\"$TS\", \"metric\":$VALUE}" | \
              wget --header="Content-Type: application/json" \
                   --post-data=- http://logstash:5044 -O - -q;
              sleep 1;
            done
# ---------------------------------------------------------

