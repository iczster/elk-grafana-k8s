apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: elk
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Elasticsearch
        type: elasticsearch
        access: proxy
        url: http://elasticsearch:9200
        jsonData:
          timeField: "@timestamp"
          interval: "1s"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard
  namespace: elk
data:
  dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Per Second Metrics",
        "panels": [
          {
            "type": "timeseries",
            "title": "Metric Values per Second",
            "targets": [
              {
                "datasource": "Elasticsearch",
                "query": "metric:*"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "short"
              }
            }
          }
        ]
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.2
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: provisioning
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: provisioning
          configMap:
            name: grafana-provisioning
        - name: dashboards
          configMap:
            name: grafana-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: elk
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30001
